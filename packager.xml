<?xml version="1.0" encoding="UTF-8"?>
<!-- ==================================================================  -->
<!-- redCOMPONENT Template Framework packager                            -->
<!-- ==================================================================  -->
<project name="com_redshop" default="dist">
    <!-- Do initialization stuff -->
    <property file="build.properties" override="true" />

    <property
            name="extension"
            value="${tpl.name}"
            override="true" />

    <property
            name="version"
            value="${tpl.version}"
            override="true" />

    <!-- Folder where the redSHOP repository is located  -->
    <property
            name="extpath"
            value="${repo.dir}/code"
            override="true" />

    <!-- Target dir where packages will be created  -->
    <property
            name="targetdir"
            value="${package.dir}/package-${extension}-v${version}"
            override="true" />

    <!-- ============================================  -->
    <!-- Create packages folder                        -->
    <!-- ============================================  -->
    <target name="prepare">
        <!-- Check if the target folder exists. If not, create it -->
        <if>
            <available file="${targetdir}" type="dir" />
            <then>
                <echo msg="Removing old ${targetdir}" />
                <delete dir="${targetdir}" />
            </then>
        </if>
        <echo msg="Making directory to store the packages at ${targetdir}" />
        <mkdir dir="${targetdir}" />

    </target>

    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <!-- Copy the source files to the target folder -->

    <target name="build" depends="prepare">

        <php expression="strtolower(${extension})" returnProperty="nameLcwords"/>
        <php expression="strtoupper(${extension})" returnProperty="nameUcwords"/>

        <filterchain id="file">
            <replaceregexp>
                <regexp pattern="%%version%%" replace="${version}" ignoreCase="true" />
                <regexp pattern="%%lwname%%" replace="${nameLcwords}" ignoreCase="true" />
                <regexp pattern="%%UPNAME%%" replace="${nameUcwords}" ignoreCase="true" />
                <regexp pattern="%%extention%%" replace="${extension}" ignoreCase="true" />
            </replaceregexp>
        </filterchain>

        <echo msg="Copying CODE folder to build directory..." />
        <copy todir="${targetdir}">
            <filterchain refid="file" />
            <fileset dir="${extpath}">
                <include name="**" />
                <exclude name="language/**"/>
                <exclude name=".*" />
            </fileset>
        </copy>

        <!-- Languages -->
        <copy file="${extpath}/language/en-GB/en-GB.tpl_${nameLcwords}.ini" tofile="${targetdir}/language/en-GB/en-GB.tpl_${nameLcwords}.ini" overwrite="true">
            <filterchain refid="file" />
        </copy>
        <copy file="${extpath}/language/en-GB/en-GB.tpl_${nameLcwords}.sys.ini" tofile="${targetdir}/language/en-GB/en-GB.tpl_${nameLcwords}.sys.ini" overwrite="true">
            <filterchain refid="file" />
        </copy>

        <exec command="uglifyjs js/js.js > ${targetdir}/js/js.js" logoutput="true" dir="${extpath}" />
        <exec command="uglifyjs wright/js/stickyfooter.js > ${targetdir}/wright/js/stickyfooter.js" logoutput="true" dir="${extpath}" />
        <exec command="uglifyjs wright/js/utils.js > ${targetdir}/wright/js/utils.js" logoutput="true" dir="${extpath}" />

    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT)  Target: dist                       -->
    <!-- ============================================  -->
    <target name="dist" depends="build">
        <echo msg="Creating ZIP archive..." />

        <zip destfile="${targetdir}/../tpl_${extension}-v${version}.zip">
            <fileset dir="${targetdir}">
                <include name="**" />
                <exclude name=".*" />
            </fileset>
        </zip>

        <echo msg="Files copied and compressed in build directory OK!" />
    </target>
</project>